{
	// Place your vscodes 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"begin":{
		"prefix": "cpp_begin",
		"body": [
			"#include<iostream>",
			"#include<cstdio>",
			"#include<algorithm>",
			"#include<deque>",
			"#include<string>",
			"",
			"",
			"int main(){",
			"",
			"",
			"\treturn 0;",
			"}"
		],
		"description": "cpp初始模板"
	},

	"cpp_o2":{
		"prefix": "cpp_o2",
		"body": "#pragma gcc optimize(2)"
	},

	"cpp_for":{
		"prefix": "cpp_for",
		"body": "for(int ${1:i} = ${2:1};${1:i} ${3:<=} ${range};${1:i}${4:++})$0"
	},

	"cpp_switch":{
		"prefix": "cpp_switch",
		"body": ["switch($1){",
				 "\tcase $2 :",
				 "\t\tbreak;",
				 "\tcase $3 :",
				 "\t\tbreak;",
				 "}$0"
		]
	},
	"cpp_scanf":{
		"prefix": "my_scanf",
		"body": "scanf(\" %$1\",&$2);$0"
	},
	"cpp_printf":{
		"prefix": "my_printf",
		"body": "printf(\"%$1\\n\",$Vars);$0"
	},
	"cpp_comment":{
		"prefix": "//",
		"body": "/*\n$body\n*/",
	}
}